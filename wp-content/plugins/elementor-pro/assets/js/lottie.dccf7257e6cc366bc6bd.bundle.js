/*!elementor-pro - v3.4.2 - 12-10-2021*/(self["webpackChunkelementor_pro"]=self["webpackChunkelementor_pro"]||[]).push([["lottie"],{"../modules/lottie/assets/js/frontend/handler.js":/*!*******************************************************!*\
!*** ../modules/lottie/assets/js/frontend/handler.js ***!
\*******************************************************/((__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",({value:true}));exports.default=void 0;class lottieHandler extends elementorModules.frontend.handlers.Base{getDefaultSettings(){return{selectors:{container:'.e-lottie__container',containerLink:'.e-lottie__container__link',animation:'.e-lottie__animation',caption:'.e-lottie__caption'},classes:{caption:'e-lottie__caption'}};}
getDefaultElements(){const{selectors}=this.getSettings();return{$widgetWrapper:this.$element,$container:this.$element.find(selectors.container),$containerLink:this.$element.find(selectors.containerLink),$animation:this.$element.find(selectors.animation),$caption:this.$element.find(selectors.caption),$sectionParent:this.$element.closest('.elementor-section'),$columnParent:this.$element.closest('.elementor-column')};}
onInit(...args){super.onInit(...args);this.lottie=null;this.state={isAnimationScrollUpdateNeededOnFirstLoad:true,isNewLoopCycle:false,isInViewport:false,loop:false,animationDirection:'forward',currentAnimationTrigger:'',effectsRelativeTo:'',hoverOutMode:'',hoverArea:'',caption:'',playAnimationCount:0,animationSpeed:0,linkTimeout:0,viewportOffset:{start:0,end:100}};this.intersectionObservers={animation:{observer:null,element:null},lazyload:{observer:null,element:null}};this.animationFrameRequest={timer:null,lastScrollY:0};this.listeners={collection:[],elements:{$widgetArea:{triggerAnimationHoverIn:null,triggerAnimationHoverOut:null},$container:{triggerAnimationClick:null}}};this.initLottie();}
initLottie(){const lottieSettings=this.getLottieSettings();if(lottieSettings.lazyload){this.lazyloadLottie();}else{this.generateLottie();}}
lazyloadLottie(){const bufferHeightBeforeTriggerLottie=200;this.intersectionObservers.lazyload.observer=elementorModules.utils.Scroll.scrollObserver({offset:`0px 0px ${bufferHeightBeforeTriggerLottie}px`,callback:event=>{if(event.isInViewport){this.generateLottie();this.intersectionObservers.lazyload.observer.unobserve(this.intersectionObservers.lazyload.element);}}});this.intersectionObservers.lazyload.element=this.elements.$container[0];this.intersectionObservers.lazyload.observer.observe(this.intersectionObservers.lazyload.element);}
generateLottie(){this.createLottieInstance();this.setLottieEvents();}
createLottieInstance(){const lottieSettings=this.getLottieSettings();this.lottie=bodymovin.loadAnimation({container:this.elements.$animation[0],path:this.getAnimationPath(),renderer:lottieSettings.renderer,autoplay:false,name:'lottie-widget'});this.elements.$animation.data('lottie',this.lottie);}
getAnimationPath(){var _lottieSettings$sourc,_lottieSettings$sourc2;const lottieSettings=this.getLottieSettings();if((_lottieSettings$sourc=lottieSettings.source_json)!==null&&_lottieSettings$sourc!==void 0&&_lottieSettings$sourc.url&&'json'===lottieSettings.source_json.url.toLowerCase().substr(-4)){return lottieSettings.source_json.url;}else if((_lottieSettings$sourc2=lottieSettings.source_external_url)!==null&&_lottieSettings$sourc2!==void 0&&_lottieSettings$sourc2.url){return lottieSettings.source_external_url.url;}
return elementorProFrontend.config.lottie.defaultAnimationUrl;}
setCaption(){const lottieSettings=this.getLottieSettings();if('external_url'===lottieSettings.source||'media_file'===lottieSettings.source&&'custom'===lottieSettings.caption_source){const $captionElement=this.getCaptionElement();$captionElement.text(lottieSettings.caption);}}
getCaptionElement(){if(!this.elements.$caption.length){const{classes}=this.getSettings();this.elements.$caption=jQuery('<p>',{class:classes.caption});this.elements.$container.append(this.elements.$caption);return this.elements.$caption;}
return this.elements.$caption;}
setLottieEvents(){this.lottie.addEventListener('DOMLoaded',()=>this.onLottieDomLoaded());this.lottie.addEventListener('complete',()=>this.onComplete());}
saveInitialValues(){var _lottieSettings$play_;const lottieSettings=this.getLottieSettings();this.lottie.__initialTotalFrames=this.lottie.totalFrames;this.lottie.__initialFirstFrame=this.lottie.firstFrame;this.state.currentAnimationTrigger=lottieSettings.trigger;this.state.effectsRelativeTo=lottieSettings.effects_relative_to;this.state.viewportOffset.start=lottieSettings.viewport?lottieSettings.viewport.sizes.start:0;this.state.viewportOffset.end=lottieSettings.viewport?lottieSettings.viewport.sizes.end:100;this.state.animationSpeed=(_lottieSettings$play_=lottieSettings.play_speed)===null||_lottieSettings$play_===void 0?void 0:_lottieSettings$play_.size;this.state.linkTimeout=lottieSettings.link_timeout;this.state.caption=lottieSettings.caption;this.state.loop=lottieSettings.loop;}
setAnimationFirstFrame(){const frame=this.getAnimationFrames();frame.first=frame.first-this.lottie.__initialFirstFrame;this.lottie.goToAndStop(frame.first,true);}
initAnimationTrigger(){const lottieSettings=this.getLottieSettings();switch(lottieSettings.trigger){case 'none':this.playLottie();break;case 'arriving_to_viewport':this.playAnimationWhenArrivingToViewport();break;case 'bind_to_scroll':this.playAnimationWhenBindToScroll();break;case 'on_click':this.bindAnimationClickEvents();break;case 'on_hover':this.bindAnimationHoverEvents();break;}}
playAnimationWhenArrivingToViewport(){const offset=this.getOffset();this.intersectionObservers.animation.observer=elementorModules.utils.Scroll.scrollObserver({offset:`${offset.end}% 0% ${offset.start}%`,callback:event=>{if(event.isInViewport){this.state.isInViewport=true;this.playLottie();}else{this.state.isInViewport=false;this.lottie.pause();}}});this.intersectionObservers.animation.element=this.elements.$widgetWrapper[0];this.intersectionObservers.animation.observer.observe(this.intersectionObservers.animation.element);}
getOffset(){const lottieSettings=this.getLottieSettings(),start=-lottieSettings.viewport.sizes.start||0,end=-(100-lottieSettings.viewport.sizes.end)||0;return{start,end};}
playAnimationWhenBindToScroll(){const lottieSettings=this.getLottieSettings(),offset=this.getOffset();this.intersectionObservers.animation.observer=elementorModules.utils.Scroll.scrollObserver({offset:`${offset.end}% 0% ${offset.start}%`,callback:event=>this.onLottieIntersection(event)});this.intersectionObservers.animation.element='viewport'===lottieSettings.effects_relative_to?this.elements.$widgetWrapper[0]:document.documentElement;this.intersectionObservers.animation.observer.observe(this.intersectionObservers.animation.element);}
updateAnimationByScrollPosition(){const lottieSettings=this.getLottieSettings();let percentage;if('page'===lottieSettings.effects_relative_to){percentage=this.getLottiePagePercentage();}else if('fixed'===this.getCurrentDeviceSetting('_position')){percentage=this.getLottieViewportHeightPercentage();}else{percentage=this.getLottieViewportPercentage();}
let nextFrameToPlay=this.getFrameNumberByPercent(percentage);nextFrameToPlay=nextFrameToPlay-this.lottie.__initialFirstFrame;this.lottie.goToAndStop(nextFrameToPlay,true);}
getLottieViewportPercentage(){return elementorModules.utils.Scroll.getElementViewportPercentage(this.elements.$widgetWrapper,this.getOffset());}
getLottiePagePercentage(){return elementorModules.utils.Scroll.getPageScrollPercentage(this.getOffset());}
getLottieViewportHeightPercentage(){return elementorModules.utils.Scroll.getPageScrollPercentage(this.getOffset(),window.innerHeight);}
getFrameNumberByPercent(percent){const frame=this.getAnimationFrames();percent=Math.min(100,Math.max(0,percent));return frame.first+(frame.last-frame.first)*percent/100;}
getAnimationFrames(){const lottieSettings=this.getLottieSettings(),currentFrame=this.getAnimationCurrentFrame(),startPoint=this.getAnimationRange().start,endPoint=this.getAnimationRange().end;let firstFrame=this.lottie.__initialFirstFrame,lastFrame=0===this.lottie.__initialFirstFrame?this.lottie.__initialTotalFrames:this.lottie.__initialFirstFrame+this.lottie.__initialTotalFrames;if(startPoint&&startPoint>firstFrame){firstFrame=startPoint;}
if(endPoint&&endPoint<lastFrame){lastFrame=endPoint;}
if(!this.state.isNewLoopCycle&&'bind_to_scroll'!==lottieSettings.trigger){firstFrame=startPoint&&startPoint>currentFrame?startPoint:currentFrame;}
if('backward'===this.state.animationDirection&&this.isReverseMode()){firstFrame=currentFrame;lastFrame=startPoint&&startPoint>this.lottie.__initialFirstFrame?startPoint:this.lottie.__initialFirstFrame;}
return{first:firstFrame,last:lastFrame,current:currentFrame,total:this.lottie.__initialTotalFrames};}
getAnimationRange(){const lottieSettings=this.getLottieSettings();return{start:this.getInitialFrameNumberByPercent(lottieSettings.start_point.size),end:this.getInitialFrameNumberByPercent(lottieSettings.end_point.size)};}
getInitialFrameNumberByPercent(percent){percent=Math.min(100,Math.max(0,percent));return this.lottie.__initialFirstFrame+(this.lottie.__initialTotalFrames-this.lottie.__initialFirstFrame)*percent/100;}
getAnimationCurrentFrame(){return 0===this.lottie.firstFrame?this.lottie.currentFrame:this.lottie.firstFrame+this.lottie.currentFrame;}
setLinkTimeout(){var _lottieSettings$custo;const lottieSettings=this.getLottieSettings();if('on_click'===lottieSettings.trigger&&(_lottieSettings$custo=lottieSettings.custom_link)!==null&&_lottieSettings$custo!==void 0&&_lottieSettings$custo.url&&lottieSettings.link_timeout){this.elements.$containerLink.on('click',event=>{event.preventDefault();if(!this.isEdit){setTimeout(()=>{const tabTarget='on'===lottieSettings.custom_link.is_external?'_blank':'_self';window.open(lottieSettings.custom_link.url,tabTarget);},lottieSettings.link_timeout);}});}}
bindAnimationClickEvents(){this.listeners.elements.$container.triggerAnimationClick=()=>{this.playLottie();};this.addSessionEventListener(this.elements.$container,'click',this.listeners.elements.$container.triggerAnimationClick);}
getLottieSettings(){const lottieSettings=this.getElementSettings();return{...lottieSettings,lazyload:'yes'===lottieSettings.lazyload,loop:'yes'===lottieSettings.loop};}
playLottie(){const frame=this.getAnimationFrames();this.lottie.stop();this.lottie.playSegments([frame.first,frame.last],true);this.state.isNewLoopCycle=false;}
bindAnimationHoverEvents(){this.createAnimationHoverInEvents();this.createAnimationHoverOutEvents();}
createAnimationHoverInEvents(){const lottieSettings=this.getLottieSettings(),$widgetArea=this.getHoverAreaElement();this.state.hoverArea=lottieSettings.hover_area;this.listeners.elements.$widgetArea.triggerAnimationHoverIn=()=>{this.state.animationDirection='forward';this.playLottie();};this.addSessionEventListener($widgetArea,'mouseenter',this.listeners.elements.$widgetArea.triggerAnimationHoverIn);}
addSessionEventListener($el,event,callback){$el.on(event,callback);this.listeners.collection.push({$el,event,callback});}
createAnimationHoverOutEvents(){const lottieSettings=this.getLottieSettings(),$widgetArea=this.getHoverAreaElement();if('pause'===lottieSettings.on_hover_out||'reverse'===lottieSettings.on_hover_out){this.state.hoverOutMode=lottieSettings.on_hover_out;this.listeners.elements.$widgetArea.triggerAnimationHoverOut=()=>{if('pause'===lottieSettings.on_hover_out){this.lottie.pause();}else{this.state.animationDirection='backward';this.playLottie();}};this.addSessionEventListener($widgetArea,'mouseleave',this.listeners.elements.$widgetArea.triggerAnimationHoverOut);}}
getHoverAreaElement(){const lottieSettings=this.getLottieSettings();if('section'===lottieSettings.hover_area){return this.elements.$sectionParent;}else if('column'===lottieSettings.hover_area){return this.elements.$columnParent;}
return this.elements.$container;}
setLoopOnAnimationComplete(){const lottieSettings=this.getLottieSettings();this.state.isNewLoopCycle=true;if(lottieSettings.loop&&!this.isReverseMode()){this.setLoopWhenNotReverse();}else if(lottieSettings.loop&&this.isReverseMode()){this.setReverseAnimationOnLoop();}else if(!lottieSettings.loop&&this.isReverseMode()){this.setReverseAnimationOnSingleTrigger();}}
isReverseMode(){const lottieSettings=this.getLottieSettings();return 'yes'===lottieSettings.reverse_animation||'reverse'===lottieSettings.on_hover_out&&'backward'===this.state.animationDirection;}
setLoopWhenNotReverse(){const lottieSettings=this.getLottieSettings();if(lottieSettings.number_of_times>0){this.state.playAnimationCount++;if(this.state.playAnimationCount<lottieSettings.number_of_times){this.playLottie();}else{this.state.playAnimationCount=0;}}else{this.playLottie();}}
setReverseAnimationOnLoop(){const lottieSettings=this.getLottieSettings();if(!lottieSettings.number_of_times||this.state.playAnimationCount<lottieSettings.number_of_times){this.state.animationDirection='forward'===this.state.animationDirection?'backward':'forward';this.playLottie();if('backward'===this.state.animationDirection){this.state.playAnimationCount++;}}else{this.state.playAnimationCount=0;this.state.animationDirection='forward';}}
setReverseAnimationOnSingleTrigger(){if(this.state.playAnimationCount<1){this.state.playAnimationCount++;this.state.animationDirection='backward';this.playLottie();}else if(this.state.playAnimationCount>=1&&'forward'===this.state.animationDirection){this.state.animationDirection='backward';this.playLottie();}else{this.state.playAnimationCount=0;this.state.animationDirection='forward';}}
setAnimationSpeed(){const lottieSettings=this.getLottieSettings();if(lottieSettings.play_speed){this.lottie.setSpeed(lottieSettings.play_speed.size);}}
onElementChange(){this.updateLottieValues();this.resetAnimationTrigger();}
updateLottieValues(){var _lottieSettings$play_2;const lottieSettings=this.getLottieSettings(),valuesComparison=[{sourceVal:(_lottieSettings$play_2=lottieSettings.play_speed)===null||_lottieSettings$play_2===void 0?void 0:_lottieSettings$play_2.size,stateProp:'animationSpeed',callback:()=>this.setAnimationSpeed()},{sourceVal:lottieSettings.link_timeout,stateProp:'linkTimeout',callback:()=>this.setLinkTimeout()},{sourceVal:lottieSettings.caption,stateProp:'caption',callback:()=>this.setCaption()},{sourceVal:lottieSettings.effects_relative_to,stateProp:'effectsRelativeTo',callback:()=>this.updateAnimationByScrollPosition()},{sourceVal:lottieSettings.loop,stateProp:'loop',callback:()=>this.onLoopStateChange()}];valuesComparison.forEach(item=>{if('undefined'!==typeof item.sourceVal&&item.sourceVal!==this.state[item.stateProp]){this.state[item.stateProp]=item.sourceVal;item.callback();}});}
onLoopStateChange(){const isInActiveViewportMode='arriving_to_viewport'===this.state.currentAnimationTrigger&&this.state.isInViewport;if(this.state.loop&&(isInActiveViewportMode||'none'===this.state.currentAnimationTrigger)){this.playLottie();}}
resetAnimationTrigger(){const lottieSettings=this.getLottieSettings(),isTriggerChange=lottieSettings.trigger!==this.state.currentAnimationTrigger,isViewportOffsetChange=lottieSettings.viewport?this.isViewportOffsetChange():false,isHoverOutModeChange=lottieSettings.on_hover_out?this.isHoverOutModeChange():false,isHoverAreaChange=lottieSettings.hover_area?this.isHoverAreaChange():false;if(isTriggerChange||isViewportOffsetChange||isHoverOutModeChange||isHoverAreaChange){this.removeAnimationFrameRequests();this.removeObservers();this.removeEventListeners();this.initAnimationTrigger();}}
isViewportOffsetChange(){const lottieSettings=this.getLottieSettings(),isStartOffsetChange=lottieSettings.viewport.sizes.start!==this.state.viewportOffset.start,isEndOffsetChange=lottieSettings.viewport.sizes.end!==this.state.viewportOffset.end;return isStartOffsetChange||isEndOffsetChange;}
isHoverOutModeChange(){const lottieSettings=this.getLottieSettings();return lottieSettings.on_hover_out!==this.state.hoverOutMode;}
isHoverAreaChange(){const lottieSettings=this.getLottieSettings();return lottieSettings.hover_area!==this.state.hoverArea;}
removeEventListeners(){this.listeners.collection.forEach(listener=>{listener.$el.off(listener.event,null,listener.callback);});}
removeObservers(){for(const type in this.intersectionObservers){if(this.intersectionObservers[type].observer&&this.intersectionObservers[type].element){this.intersectionObservers[type].observer.unobserve(this.intersectionObservers[type].element);}}}
removeAnimationFrameRequests(){cancelAnimationFrame(this.animationFrameRequest.timer);}
onDestroy(){super.onDestroy();this.destroyLottie();}
destroyLottie(){this.removeAnimationFrameRequests();this.removeObservers();this.removeEventListeners();this.elements.$animation.removeData('lottie');if(this.lottie){this.lottie.destroy();}}
onLottieDomLoaded(){this.saveInitialValues();this.setAnimationSpeed();this.setLinkTimeout();this.setCaption();this.setAnimationFirstFrame();this.initAnimationTrigger();}
onComplete(){this.setLoopOnAnimationComplete();}
onLottieIntersection(event){if(event.isInViewport){if(this.state.isAnimationScrollUpdateNeededOnFirstLoad){this.state.isAnimationScrollUpdateNeededOnFirstLoad=false;this.updateAnimationByScrollPosition();}
this.animationFrameRequest.timer=requestAnimationFrame(()=>this.onAnimationFrameRequest());}else{const frame=this.getAnimationFrames(),finalFrame='up'===event.intersectionScrollDirection?frame.first:frame.last;this.state.isAnimationScrollUpdateNeededOnFirstLoad=false;cancelAnimationFrame(this.animationFrameRequest.timer);this.lottie.goToAndStop(finalFrame,true);}}
onAnimationFrameRequest(){if(window.scrollY!==this.animationFrameRequest.lastScrollY){this.updateAnimationByScrollPosition();this.animationFrameRequest.lastScrollY=window.scrollY;}
this.animationFrameRequest.timer=requestAnimationFrame(()=>this.onAnimationFrameRequest());}}
exports.default=lottieHandler;})}]);