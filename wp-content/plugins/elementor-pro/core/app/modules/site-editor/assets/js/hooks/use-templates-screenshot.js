import{Context as TemplatesContext}from '../context/templates';import useScreenshot,{SCREENSHOT_STATUS_SUCCEED,SCREENSHOT_STATUS_FAILED}from 'modules/screenshots/app/assets/js/hooks/use-screenshot';export default function useTemplatesScreenshot(templateType=null){const{updateTemplateItemState,templates}=React.useContext(TemplatesContext);const templatesForScreenshot=Object.values(templates).filter((template)=>shouldScreenshotTemplate(template,templateType),);const screenshot=useScreenshot(templatesForScreenshot);React.useEffect(()=>{screenshot.posts.filter((post)=>post.status===SCREENSHOT_STATUS_SUCCEED).forEach((post)=>updateTemplateItemState(post.id,{thumbnail:post.imageUrl}));},[screenshot.succeed]);React.useEffect(()=>{screenshot.posts.filter((post)=>post.status===SCREENSHOT_STATUS_FAILED).forEach((post)=>updateTemplateItemState(post.id,{screenshot_url:null}));},[screenshot.failed]);return screenshot;}
function shouldScreenshotTemplate(template,templateType=null){if(templateType){return false;}
return 'publish'===template.status&&!template.thumbnail&&template.screenshot_url;}