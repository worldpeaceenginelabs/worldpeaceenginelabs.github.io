'use strict';window.tsfTabs=function(){const tabStack=new Map();const _toggleCache=new Map();const _correctTabFocus=()=>{let changeEvent=new Event('change');tabStack.forEach(args=>{if(!args.fixHistory)return;document.querySelectorAll(`.${args.HTMLClasses.tabRadio}:checked`).forEach(el=>{el.dispatchEvent(changeEvent);});});}
const toggleToInstant=(stackId,target)=>{const stack=getStack(stackId);const newContent=document.getElementById(`${target.id}-content`);if(newContent&&!newContent.classList.contains(stack.HTMLClasses.activeTabContent)){document.querySelectorAll(`.${target.name}-content`).forEach(element=>{element.classList.remove(stack.HTMLClasses.activeTabContent);});newContent.classList.add(stack.HTMLClasses.activeTabContent);}
document.getElementById(target.id).dispatchEvent(stack.tabToggledEvent);}
const toggleTo=(stackId,target)=>{const cacheId=target.name;const stack=getStack(stackId);const fadeOutTimeout=125;const fadeInTimeout=175;const fadeCSS={fadeIn:{opacity:1,animation:'tsf-fade-in',animationDuration:`${fadeInTimeout}ms`,animationTimingFunction:'cubic-bezier(.54,.12,.90,.60)',},fadeOut:{opacity:0,animation:'tsf-fade-out',animationDuration:`${fadeOutTimeout}ms`,animationTimingFunction:'cubic-bezier(.54,.12,.90,.60)',}};const fadeIn=element=>{for(const prop in fadeCSS.fadeIn)element.style[prop]=fadeCSS.fadeIn[prop]};const fadeOut=element=>{for(const prop in fadeCSS.fadeOut)element.style[prop]=fadeCSS.fadeOut[prop]};const container=_toggleCache.get('container').get(cacheId);const allContent=document.querySelectorAll(`.${target.name}-content`);const lockHeight=()=>{container.style.boxSizing='border-box';container.style.minHeight=`${container.getBoundingClientRect().height}px`;}
const unLockHeight=()=>{container.style.minHeight='';}
const setCorrectTab=async()=>{let newContent=document.getElementById(`${_toggleCache.get('target').get(cacheId)}-content`);lockHeight();allContent.forEach(el=>{el.classList.remove(stack.HTMLClasses.activeTabContent)});newContent.classList.add(stack.HTMLClasses.activeTabContent);unLockHeight();fadeIn(newContent);await new Promise(_resolve=>setTimeout(_resolve,fadeInTimeout*2/3));return testTab();};const testTab=async()=>{let newContent=document.getElementById(`${_toggleCache.get('target').get(cacheId)}-content`);if(!newContent||newContent.classList.contains(stack.HTMLClasses.activeTabContent)){clearPromise();document.getElementById(_toggleCache.get('target').get(cacheId)).dispatchEvent(stack.tabToggledEvent);}else{lockHeight();allContent.forEach(el=>{el.classList.remove(stack.HTMLClasses.activeTabContent)});requestAnimationFrame(()=>{setCorrectTab()&&clearPromise()});}}
const doPromise=()=>new Promise(async resolve=>{allContent.forEach(fadeOut);await new Promise(_resolve=>setTimeout(_resolve,fadeOutTimeout));return setCorrectTab()&&resolve();});const clearPromise=()=>_toggleCache.get('promises').delete(cacheId);const runPromise=()=>{if(_toggleCache.get('promises').has(cacheId))return;_toggleCache.get('promises').set(cacheId,doPromise);_toggleCache.get('promises').get(cacheId)();}
runPromise();}
const _toggle=(stackId,event)=>{const stack=getStack(stackId);const currentToggle=event.target;const onload=!event.isTrusted;const toggleId=event.target.id;const toggleName=event.target.name;const cacheId=toggleName;_toggleCache.get('wrap').has(cacheId)||(_toggleCache.get('wrap').set(cacheId,currentToggle.closest(`.${stack.HTMLClasses.wrapper}`)));const previousToggle=_toggleCache.get('wrap').get(cacheId).querySelector(`.${stack.HTMLClasses.activeTab}`);if(!onload){const invalidInput=document.querySelector(`.${stack.HTMLClasses.activeTabContent} :invalid`);if(invalidInput){invalidInput.reportValidity();if(previousToggle)
previousToggle.checked=true;currentToggle.checked=false;event.stopPropagation();event.preventDefault();return false;}}
if(previousToggle){previousToggle.classList.remove(stack.HTMLClasses.activeTab);let label=document.querySelector(`.${stack.HTMLClasses.tabLabel}[for="${previousToggle.id}"]`);label&&label.classList.remove('tsf-no-focus-ring');}
currentToggle.classList.add(stack.HTMLClasses.activeTab);if(onload){toggleToInstant(stackId,event.target);}else{if(!_toggleCache.get('container').has(cacheId)){_toggleCache.get('container').set(cacheId,currentToggle.closest('.inside'));}
_toggleCache.get('target').set(cacheId,toggleId);if(_toggleCache.get('promises').has(cacheId))return;toggleTo(stackId,event.target);}}
const getStack=stackId=>tabStack.get(stackId);const initStack=(stackId,args)=>{tabStack.set(stackId,args);const stack=getStack(stackId);const toggleForwarder=event=>_toggle(stackId,event);const addNoFocusClass=event=>event.currentTarget.classList.add('tsf-no-focus-ring');document.querySelectorAll(`.${stack.HTMLClasses.tabRadio}`).forEach(el=>{el.addEventListener('change',toggleForwarder);});document.querySelectorAll(`.${stack.HTMLClasses.wrapper} .${stack.HTMLClasses.tabLabel}`).forEach(el=>{el.addEventListener('click',addNoFocusClass);});}
return Object.assign({load:()=>{_toggleCache.set('promises',new Map());_toggleCache.set('target',new Map());_toggleCache.set('wrap',new Map());_toggleCache.set('container',new Map());window.addEventListener('load',_correctTabFocus);}},{toggleToInstant,toggleTo,getStack,initStack,});}();window.tsfTabs.load();